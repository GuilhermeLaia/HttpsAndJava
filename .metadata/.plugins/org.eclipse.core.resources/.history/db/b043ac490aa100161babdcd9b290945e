package com.keystore.keystore;

import java.io.File;
import java.io.IOException;
import java.security.KeyManagementException;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.UnrecoverableKeyException;
import java.security.cert.CertificateException;

import javax.net.ssl.SSLContext;

import org.apache.http.conn.ssl.SSLConnectionSocketFactory;
import org.apache.http.ssl.SSLContexts;

/**
 * Hello world!
 *
 */
public class App {
	
	protected static final SSLConnectionSocketFactory createSslSocketFactory(String trustedKeystore, String keystore)
			throws Exception {

		File trustedKeystoreFile = new File(trustedKeystore);
		File keystoreFile = new File(keystore);

		try {

			SSLContext sslcontext = SSLContexts.custom()
					.loadTrustMaterial(trustedKeystoreFile, "<<trusted_keystore_password>>".toCharArray())
					.loadKeyMaterial(keystoreFile, "<<keystore_password>>".toCharArray(),
							"<<original_password_of_PKCS12_file>>".toCharArray())
					.build();
			return new SSLConnectionSocketFactory(sslcontext, new String[] { "TLSv1.2" }, null,
					SSLConnectionSocketFactory.getDefaultHostnameVerifier());

		} catch (Exception ex) {
			throw ex;
		}

	}
	
	
	
	
	
	
}
